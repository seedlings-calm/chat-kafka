syntax = "proto3";

package chatkafka.chat;

import "google/protobuf/any.proto";


option go_package = "./types";



service ChatService {
    //私聊,群聊
    rpc Chat(stream ChatServiceRequest) returns(stream ChatServiceResponse);
    //广播,用户和服务端都可以发广播
    rpc Broadcast(stream BroadcastRequest) returns (stream BroadcastResponse);
}

message AnyContent {
    google.protobuf.Any value = 1;
}

message MsgType {
    string msg_type = 1; //text,face,sound,image,file,video
    map<string,AnyContent> msg_content = 2;
}

message ChatServiceRequest {
    string from = 1; //发送方
    repeated MsgType msg = 2; //发送内容，数组 支持多类型信息一起发送
    string chat_type = 3; // private,group
}

message ChatServiceResponse {
   string msg = 1; //返回消息
   string source = 2; //消息来源
}

message BroadcastRequest {
    string from = 1; //广播人
    string msg = 2; //广播内容
}

message BroadcastResponse{
    string msg = 1; //广播内容
    string source = 2; //消息来源
}